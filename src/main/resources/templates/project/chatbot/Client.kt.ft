package ${GROUP_ID}.${ARTIFACT_ID}

import io.ktor.client.*
import io.ktor.client.engine.cio.*
import space.jetbrains.api.runtime.SpaceHttpClient
import space.jetbrains.api.runtime.resources.chats
import space.jetbrains.api.runtime.types.*
import space.jetbrains.api.runtime.withServiceAccountTokenSource
import space.jetbrains.yana.verifyWithToken

/**
 * Url of your Space instance.
 * This value may used for defining Space client using Client Credentials auth flow
 *
 * Example: https://instance.jetbrains.space
 */
private const val spaceInstanceUrl = ${SPACE_INSTANCE_URL}

private val spaceVerificationToken = ${ENDPOINT_VERIFICATION_TOKEN}

// client for communication with Space
// it uses the Client Credentials auth flow
val spaceClient by lazy {
    SpaceHttpClient(HttpClient(CIO)).withServiceAccountTokenSource(
        ClientCredentialsFlow.clientId, ClientCredentialsFlow.clientSecret, spaceInstanceUrl
    )
}

// verification of Space instance
// compares the token in payload with verificationToken
fun verifyPayload(payload: ApplicationPayload): Boolean {
    return payload.verifyWithToken(spaceVerificationToken)
}

// get user by Id and send message to the user
// spaceClient gives you access to any Space endpoint
suspend fun sendMessage(context: EchoContext, message: ChatMessage) {
    val member = ProfileIdentifier.Id(context.userId)
    spaceClient.chats.messages.sendMessage(MessageRecipient.Member(member), message)
}

/**
 * The Client Credentials Flow can be used by a server-side application that
 * accesses Space on behalf of itself, for example, a chatbot. The application
 * receives an access token from Space by sending it <i>client_id</i> and <i>client_secret</i>.
 *
 * Not all operations may be accessible using the Client Credentials Flow.
 * Many actions (for example, posting an article draft) require user consent
 * and cannot be performed with application credentials.
 *
 * For actions that should be performed on behalf of the user,
 * use other authorization flows, for example Resource Owner Password Credentials Flow.
 */
object ClientCredentialsFlow {

    const val clientId: String = ${CLIENT_CREDENTIALS_CLIENT_ID}

    const val clientSecret: String = ${CLIENT_CREDENTIALS_CLIENT_SECRET}
}
