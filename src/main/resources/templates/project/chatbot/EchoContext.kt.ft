package ${GROUP_ID}.${ARTIFACT_ID}

import space.jetbrains.api.runtime.types.ApplicationPayload
import space.jetbrains.api.runtime.types.ListCommandsPayload
import space.jetbrains.api.runtime.types.MessageActionPayload
import space.jetbrains.api.runtime.types.MessagePayload

import space.jetbrains.api.runtime.types.*

// here can be any context info, e.g. user info, payload, etc.
class EchoContext(val userId: String, val message: MessageContext)

// get userId from the payload
suspend fun getEchoContext(payload: ApplicationPayload): EchoContext = when (payload) {
    is ListCommandsPayload -> {
        error("User types a char - ignoring")
    }
    is MessageActionPayload -> {
        EchoContext(payload.userId, payload.message)
    }
    is MessagePayload -> {
        EchoContext(payload.userId, payload.message)
    }
    else -> error("unknown command")
}